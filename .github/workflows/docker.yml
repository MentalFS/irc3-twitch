name: Docker
on:
  push:
  schedule:
    - cron: '15 5 1 * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_AUTHOR: mentalfs
  IMAGE_NAME: irc3-twitch
  TAG: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_AUTHOR }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image and push it to ${{ env.REGISTRY }}
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_AUTHOR }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref == 'refs/heads/main' }}

  prune:
    needs: [docker]
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Prune images older than 7 days
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: vlaurin/action-ghcr-prune@v0.5.0
        with:
          token: ${{ secrets.PACKAGE_DELETE_TOKEN }}
          user: ${{ env.IMAGE_AUTHOR }}
          container: ${{ env.IMAGE_NAME }}
          dry-run: false
          keep-younger-than: 7
          keep-last: 7
          prune-untagged: true
